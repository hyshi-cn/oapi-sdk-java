// Code generated by lark suite oapi sdk gen
package ext.feishu.oapi.service.authen.v1;

import ext.feishu.oapi.core.Config;
import ext.feishu.oapi.core.api.AccessTokenType;
import ext.feishu.oapi.core.api.Api;
import ext.feishu.oapi.core.api.ReqCaller;
import ext.feishu.oapi.core.api.request.Request;
import ext.feishu.oapi.core.api.request.RequestOptFn;
import ext.feishu.oapi.core.api.response.Response;
import ext.feishu.oapi.service.authen.v1.model.AuthenAccessTokenReqBody;
import ext.feishu.oapi.service.authen.v1.model.AuthenRefreshAccessTokenReqBody;
import ext.feishu.oapi.service.authen.v1.model.UserAccessTokenInfo;
import ext.feishu.oapi.service.authen.v1.model.UserInfo;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class AuthenService {

    private final Config  config;
    private final Authens authens;

    public AuthenService(Config config) {
        this.config = config;
        this.authens = new Authens(this);
    }

    public Authens getAuthens() {
        return authens;
    }

    public static class Authens {

        private final AuthenService service;

        public Authens(AuthenService service) {
            this.service = service;
        }
    
        public AuthenAccessTokenReqCall accessToken(AuthenAccessTokenReqBody body, RequestOptFn... optFns) {
            return new AuthenAccessTokenReqCall(this, body, optFns);
        }
    
        public AuthenRefreshAccessTokenReqCall refreshAccessToken(AuthenRefreshAccessTokenReqBody body, RequestOptFn... optFns) {
            return new AuthenRefreshAccessTokenReqCall(this, body, optFns);
        }
    
        public AuthenUserInfoReqCall userInfo(RequestOptFn... optFns) {
            return new AuthenUserInfoReqCall(this, optFns);
        }
    
    }
    public static class AuthenAccessTokenReqCall extends ReqCaller<AuthenAccessTokenReqBody, UserAccessTokenInfo> {
        private final Authens authens;
        
        private final AuthenAccessTokenReqBody body;
        private final List<RequestOptFn> optFns;
        private UserAccessTokenInfo result;
        
        private AuthenAccessTokenReqCall(Authens authens, AuthenAccessTokenReqBody body, RequestOptFn... optFns) {
        
            this.body = body;
            this.optFns = new ArrayList<>();
            this.optFns.addAll(Arrays.asList(optFns));
            this.result = new UserAccessTokenInfo();
            this.authens = authens;
        }
        

        @Override
        public Response<UserAccessTokenInfo> execute() throws Exception {
            Request<AuthenAccessTokenReqBody, UserAccessTokenInfo> request = Request.newRequest("/open-apis/authen/v1/access_token", "POST",
                    new AccessTokenType[]{AccessTokenType.App},
                    this.body, this.result, this.optFns.toArray(new RequestOptFn[]{}));
            return Api.send(this.authens.service.config, request);
        }
    }
    public static class AuthenRefreshAccessTokenReqCall extends ReqCaller<AuthenRefreshAccessTokenReqBody, UserAccessTokenInfo> {
        private final Authens authens;
        
        private final AuthenRefreshAccessTokenReqBody body;
        private final List<RequestOptFn> optFns;
        private UserAccessTokenInfo result;
        
        private AuthenRefreshAccessTokenReqCall(Authens authens, AuthenRefreshAccessTokenReqBody body, RequestOptFn... optFns) {
        
            this.body = body;
            this.optFns = new ArrayList<>();
            this.optFns.addAll(Arrays.asList(optFns));
            this.result = new UserAccessTokenInfo();
            this.authens = authens;
        }
        

        @Override
        public Response<UserAccessTokenInfo> execute() throws Exception {
            Request<AuthenRefreshAccessTokenReqBody, UserAccessTokenInfo> request = Request.newRequest("/open-apis/authen/v1/refresh_access_token", "POST",
                    new AccessTokenType[]{AccessTokenType.App},
                    this.body, this.result, this.optFns.toArray(new RequestOptFn[]{}));
            return Api.send(this.authens.service.config, request);
        }
    }
    public static class AuthenUserInfoReqCall extends ReqCaller<Object, UserInfo> {
        private final Authens authens;
        
        private final List<RequestOptFn> optFns;
        private UserInfo result;
        
        private AuthenUserInfoReqCall(Authens authens, RequestOptFn... optFns) {
        
            this.optFns = new ArrayList<>();
            this.optFns.addAll(Arrays.asList(optFns));
            this.result = new UserInfo();
            this.authens = authens;
        }
        

        @Override
        public Response<UserInfo> execute() throws Exception {
            Request<Object, UserInfo> request = Request.newRequest("/open-apis/authen/v1/user_info", "GET",
                    new AccessTokenType[]{AccessTokenType.User},
                    null, this.result, this.optFns.toArray(new RequestOptFn[]{}));
            return Api.send(this.authens.service.config, request);
        }
    }

}
