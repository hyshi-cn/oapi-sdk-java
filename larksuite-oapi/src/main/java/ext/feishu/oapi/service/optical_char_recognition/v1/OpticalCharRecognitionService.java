// Code generated by lark suite oapi sdk gen
package ext.feishu.oapi.service.optical_char_recognition.v1;

import ext.feishu.oapi.core.Config;
import ext.feishu.oapi.core.api.AccessTokenType;
import ext.feishu.oapi.core.api.Api;
import ext.feishu.oapi.core.api.ReqCaller;
import ext.feishu.oapi.core.api.request.Request;
import ext.feishu.oapi.core.api.request.RequestOptFn;
import ext.feishu.oapi.core.api.response.Response;
import ext.feishu.oapi.service.optical_char_recognition.v1.model.ImageBasicRecognizeReqBody;
import ext.feishu.oapi.service.optical_char_recognition.v1.model.ImageBasicRecognizeResult;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class OpticalCharRecognitionService {

    private final Config config;
    private final Images images;

    public OpticalCharRecognitionService(Config config) {
        this.config = config;
        this.images = new Images(this);
    }

    public Images getImages() {
        return images;
    }

    public static class Images {

        private final OpticalCharRecognitionService service;

        public Images(OpticalCharRecognitionService service) {
            this.service = service;
        }
    
        public ImageBasicRecognizeReqCall basicRecognize(ImageBasicRecognizeReqBody body, RequestOptFn... optFns) {
            return new ImageBasicRecognizeReqCall(this, body, optFns);
        }
    
    }
    public static class ImageBasicRecognizeReqCall extends ReqCaller<ImageBasicRecognizeReqBody, ImageBasicRecognizeResult> {
        private final Images images;
        
        private final ImageBasicRecognizeReqBody body;
        private final List<RequestOptFn> optFns;
        private ImageBasicRecognizeResult result;
        
        private ImageBasicRecognizeReqCall(Images images, ImageBasicRecognizeReqBody body, RequestOptFn... optFns) {
        
            this.body = body;
            this.optFns = new ArrayList<>();
            this.optFns.addAll(Arrays.asList(optFns));
            this.result = new ImageBasicRecognizeResult();
            this.images = images;
        }
        

        @Override
        public Response<ImageBasicRecognizeResult> execute() throws Exception {
            Request<ImageBasicRecognizeReqBody, ImageBasicRecognizeResult> request = Request.newRequest("/open-apis/optical_char_recognition/v1/image/basic_recognize", "POST",
                    new AccessTokenType[]{AccessTokenType.Tenant},
                    this.body, this.result, this.optFns.toArray(new RequestOptFn[]{}));
            return Api.send(this.images.service.config, request);
        }
    }

}
